<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xl.modules.alarm.dao.AlarmDao">
    
	<sql id="alarmColumns">
		a.id AS "id",
		a.ieme AS "ieme",
		a.host_number AS "hostNumber",
		a.loop_number AS "loopNumber",
		a.sys_type AS "sysType",
		a.type AS "type",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.build_id As "buildId",
		a.floor_id As "floorId",
		b.id as "build.id",
		b.name as "build.name",
		f.id as "floor.id",
		f.floor_no as "floor.floorNo", 
		a.del_flag AS "delFlag"
	</sql>
	
	<sql id="alarmJoins">
		left join sys_building b on b.id=a.build_id
		left join sys_building_floor f  on f.id=a.floor_id
	</sql>
    
	<select id="get" resultType="Alarm">
		SELECT 
			<include refid="alarmColumns"/>
		FROM xf_alarm a
		<include refid="alarmJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="Alarm">
		SELECT 
			<include refid="alarmColumns"/>
		FROM xf_alarm a
		<include refid="alarmJoins"/>
		where a.del_flag = #{DEL_FLAG_NORMAL}
		<if test="ieme != null and ieme != ''">
			and a.ieme=#{ieme}
		</if>
		<if test="type != null and type != ''">
			and a.type=#{type}
		</if>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="Alarm">
		SELECT 
			<include refid="alarmColumns"/>
		FROM xf_alarm a
		<include refid="alarmJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO xf_alarm(
			id,
			ieme,
			host_number,
			loop_number,
			sys_type,
			type,
			build_id,
			floor_id,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag
		) VALUES (
			#{id},
			#{ieme},
			#{hostNumber},
			#{loopNumber},
			#{sysType},
			#{type},
			#{buildId},
			#{floorId},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE xf_alarm SET 	
			ieme = #{ieme},
			host_number = #{hostNumber},
			loop_number = #{loopNumber},
			sys_type = #{sysType},
			type = #{type},
			build_id = #{buildId},
			floor_id = #{floorId},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE xf_alarm SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
</mapper>